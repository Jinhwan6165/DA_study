/* 테이블의 정의
RDBMS에서 데이터를 저장하는 2차원 형태의 데이터 베이스 객체로, 엑셀의 시트처럼 데이터를 가장 파악하기 쉬운 구조인 표 형태이다.
=다양한 유형의 속성컬럼(컬럼,열)을 가진 데이터의 집합(로우,행)이다.*/

## SQL(Stuctuered Query Language) 정의: 
구조화된(구조적인) 질의 언어로 RDBMS와 데이터 처리, 데이터베이스에 있는 데이터를 관리(기록, 조회, 수정, 삭제)하는데 사용하는 언어
특정 조건에 맞는 데이털르 한 번에 처리하는 집합적 언어
(<-> 절차적 언어: C, Java, python같은 다른 프로그래밍 언어)

영어기반 데이터처리 뿐만 아니라 데이터 베이스 객체(테이블, 뷰...)생성, 수정시 사용

SQl표준 존재 

## SQL 종류 
* DDL(Date Definition Language): 데이터 정의어
-데이터 베이스 객체(테이블, 뷰, 인덱스 등)를 생성, 수정, 삭제

CREATE :객체를 생성
DROP: 생성된 객체를 삭제
ALTER:생성된 객체를 수정
RENAME: 객체의 이름을 변경
TRUNCATE TABLE : 테이블 데이터를 삭제 (ROLL BACK 불가)


*DML(Data Manipulation Language):데이터 조작어
데이터를 조회, 입력, 수정, 삭제
SELECT : 테이블에 저장된 데이터를 조회
INSERT 테이블에 신규 데이터 입력/저장
UPDATE:기존 데이터를 수정
DELETE:데이터를 삭제
MAERGE: 조건에 다라 입력과 수정을 동시에 처리

*TCL:(Transaction Control Language) 트랜젝션(데이터 변경 작업 발생시) 제어어
COMMIT: DML로 변경된(INSERT,UPDATE,DELETE, MERGE)데이터를 데이터베이스에 저장/적용
ROLLBACK: DML로 변경된 데이터를 변경 이전 상태로 되돌림

*DCL(Data Control Language):데이터 제어어
권한을 할당하거나 회수
GRANT: 사용자에게 권한을 할당
REVOKE: 할당된 권한을 사용자로부터 회수

***SQL의 경우 객체명은 대소문자 구분을 안하지만 테이블에 있는 데이터 값은 구분한다

##주석처리
- 한 줄 주석: --
여러 줄 주석: /* */

Practice 2-1: SQL 정의와 종류 테이블 생성
Q1. SQl의 종류로는 DDL, DML, TCL, DCL이 있는데 이 중 실제로 데이터를 가공하고 처리하는 역할을 수행하는 문장은 DML문이다.
True
DML은 데이터 조작어로 데이터를 조회, 입력, 수정, 삭제할 수 있다.

Q2. 데이터를 사제하는 방법에는 2가지가 있다. 하나는 TRUNCATE TABLE문이고 다른 하나는 DELETE문이다. 
이 중 데이터를 삭제한 뒤 복구 할 수 없는 문장은 TRUNCATE TABLE문이다.
TURE
TRUNCATE TABLE 문은 DDL로 해당 테이블 데이터 전체를 삭제하는 것으로 ROLLBACK으로 복원할 수 없다.
ROLLBACK이 가능한 경우는 DML로 DELETE문을 사용하는 경우이다. 
DML의 DELETE는 특정 조건에 맞는 데이터만 삭제도 가능하다

Q3. CREATE TABLE문을 사용해 테이블을 생성한 후 테이블에 있는 컬럼의 데이터 형을 수정하려면
ALTER COLUMN문을 사용해야 한다.
FALSE
테이블에 있는 컬럼의 데이터형을 수정하기 위한 수식은 다음과 같다.
ALTER TABLE 테이블 이름
MODIFY  해당컬럼 수정내용

Q4. 
CREATE TABLE COUNTRY_TEST(
country_id NUMBER PRIMARY KEY,
country_name VARCHAR2(100) NOT NULL
 );

DESC COUNTRY_TEST;

Q5.
ALTER TABLE COUNTRY_TEST
ADD region_id NUMBER NULL;


Q6. 

ALTER TABLE COUNTRY_TEST
MODIFY region_id NULL;


Q7.
DROP TABLE COUNTRY_TEST;

Practice 2-2 

Q1. SELECT문은 테이블에 있는 데이터를 조회하는 SQL문장으로 
특정조건에 맞는 데이터를 선별하거나 특정 컬럼 별로 정렬해 데이터를 조회할 수 있다.
TRUE
SELECT문은 SQL중 DML문장으로 가장 기본이며 가장 많이 사용하는 문장이다.
저장된 데이터를 원하는 조건과 형태로 조회 가능하고
WHERE절을 사용해 특정 조건에 맞는 데이터만 선별해 조회가 가능하다.
ORDER BY 절을 사용해 데이터를 정렬해 조회하는 것도 가능하다.

Q2.다음 문장의 WHERE절에서 OR 연산자를 AND로 바꾸면 결과는 어떻게 될까요?
SELECT *
FROM employees
WHERE SALARY <= 2400
OR SALARY >=20000;      여기서 OR을 AND로 바꿈

결과는 나타나지 않는다.
왜냐하면 OR의 경우 WHERE절의 조건들 중에 해당하는 경우를 말하고, 
AND의 경우 WHERE절의 조건들이 모두 해당하는 경우를 말하는 것인데,
사원의 연봉이 2400이하이면서 20000이상인 경우는 없기 때문이다.

Q3. SELECT문에서 데이터를 정렬해 보려면 ORDER BY절을 사용하는데, 기본적인 정렬방법은 내림차순이다.
FALSE
SELECT문에서 ORDER BY의 기본값은 오름차순이다.

Q4. LOCATIONS 테이블은 부서의 주소 관련 데이터가 담겨있습니다. 
이 테이블의 컬럼과 데이터 형(타입), 각 컬럼의 NULL 허용 여부를 찾아 정리하시오.

DESC LOCATIONS;

이름             널?       유형           
-------------- -------- ------------ 
LOCATION_ID    NOT NULL NUMBER(4)    
STREET_ADDRESS          VARCHAR2(40) 
POSTAL_CODE             VARCHAR2(12) 
CITY           NOT NULL VARCHAR2(30) 
STATE_PROVINCE          VARCHAR2(25) 
COUNTRY_ID              CHAR(2)    


Q5. LOCATIONS 테이블에서 LOCATION_ID값이 2000보다 크거나 같고 3000보다 작은 건을
조회하는 문장을 작성해 보세요.
조회 결과 10건 (또는 11건)

SELECT *
FROM LOCATIONS
WHERE LOCATION_ID >=2000
AND LOCATION_ID <3000;

Q6. EMPLOYEES 테이블에서 FIRST_NAME이 'David'이고 급여가 6000이상인 사람이 속한 부서가
위치한 도시를 찾는 문장을 작성해보세요.

SELECT DEPARTMENT_ID
FROM eMPLOYEES
WHERE FIRST_NAME = 'David'
AND SALARY >=6000;
--> 결과 값 80

DESC DEPARTMENTS;

SELECT LOCATION_ID
FROM DEPARTMENTS
WHERE DEPARTMENT_ID =80;
결과값 2500

SELECT CITY
FROM LOCATIONS
WHERE LOCATION_id=2500;
결과값--> OXFORD

한번에 결과값을 뽑을 수 있는 방법은?


Practice 2-3

Q1 사장을 조회하는 쿼리
SELECT *
FROM EMPLOYEES
WHERE MANAGER_ID IS NULL;



